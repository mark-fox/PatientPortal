#Database connection
#spring.datasource.url=jdbc:mariadb://localhost:3306/patientdb
#spring.datasource.username=root
#spring.datasource.password=mypw

spring.datasource.url=jdbc:${JAWSDB_MARIA_URL}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# dialect:
# database-platform

#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update

#Custom error page
server.error.whitelabel.enabled=false
server.error.path=/error
#server.error.include-stacktrace=always

# Generates create.sql (schema design) file
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

#Populating database from data.sql file, but waits till tables are created
spring.jpa.defer-datasource-initialization=true
#Uncomment next line to populate database when app runs. Running a second time
#without re-commenting will crash the app due to duplicate IDs.
#spring.sql.init.mode=always

#Logging
logging.level.ROOT=DEBUG
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.springframework.web=TRACE
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.hibernate=DEBUG
logging.level.org.hibernate.SQL=DEBUG
#Spring generated "spring.log" file to writing transactional logs to a file
logging.file.path=.


#server.port=${PORT}

#heroku.thymeleaf.enforceHttps=true
logging.level.org.apache=trace